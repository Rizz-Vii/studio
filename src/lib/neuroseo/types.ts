// ðŸ¤– NeuroSEOâ„¢ Type Definitions - Generated by TypeScript Guardian
// Auto-generated comprehensive type definitions for all NeuroSEO components

export interface CompetitorAnalysisOutput {
    rankings: Array<{
        url: string;
        rank: number;
        keyword: string;
        competition: number;
    }>;
    contentGaps: Array<{
        keyword: string;
        gap: string;
        opportunity: string;
        priority: 'high' | 'medium' | 'low';
    }>;
    competitors: Array<{
        domain: string;
        score: number;
        keywords: string[];
        strengths: string[];
        weaknesses: string[];
    }>;
    insights: string[];
    recommendations: string[];
}

export interface CompetitorAnalysisInput {
    keywords: string[];
    yourUrl: string;
    competitorUrls: string[];
}

export interface AuditUrlOutput {
    url: string;
    overallScore: number;
    items: Array<{
        id: string;
        title: string;
        description: string;
        status: 'pass' | 'fail' | 'warning';
        score: number;
        impact: string;
        fix?: string;
    }>;
    remainingQuota: number;
}

export interface AuditUrlInput {
    url: string;
}

export interface RewriteAnalysis {
    original: string;
    rewritten: string;
    score: number;
    summary?: string;
    improvements?: string[];
    seoImpact?: {
        readability: number;
        keywordDensity: number;
        semanticRelevance: number;
        keywords?: number;
        engagement?: number;
    };
}

export interface ContentBriefOutput {
    topic: string;
    targetKeywords: string[];
    competitorInsights: Array<{
        url: string;
        content: string;
        keywords: string[];
        gaps: string[];
    }>;
    llmGeneratedOutline: Array<{
        heading: string;
        subheadings: string[];
        keyPoints: string[];
    }>;
    seoRecommendations: string[];
}

export interface ContentBriefInput {
    topic: string;
    targetAudience: string;
    keywords: string[];
}

export interface GenerateInsightsOutput {
    insights: Array<{
        title: string;
        description: string;
        impact: string;
        actionable: boolean;
        category: string;
    }>;
}

export interface LinkAnalysisOutput {
    backlinks: Array<{
        url: string;
        domain: string;
        authority: number;
        anchorText: string;
        type: string;
        status: 'active' | 'inactive';
    }>;
    domainMetrics: {
        totalBacklinks: number;
        uniqueDomains: number;
        averageAuthority: number;
    };
}

export interface LinkAnalysisInput {
    url: string;
    includeInternal: boolean;
}

export interface SerpViewOutput {
    keyword: string;
    results: Array<{
        position: number;
        title: string;
        url: string;
        snippet: string;
        features: string[];
    }>;
    totalResults: number;
}

export interface SerpViewInput {
    keyword: string;
    location?: string;
    device?: 'desktop' | 'mobile';
}

// Enhanced UsageCheck interface with backward compatibility
export interface UsageCheck {
    allowed: boolean;
    remaining: number;
    limit: number;
    remainingQuota: number;
    resetDate: Date;
    reason?: string;
    plan?: string;
    usage?: number;
}

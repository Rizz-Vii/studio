// üîç NeuroSEO‚Ñ¢ Suite - Complete Type Definitions
// Generated by TypeScript Guardian Agent
// Purpose: Resolve all missing type errors across the application

// ============================================================================
// NEUROSEO CORE TYPES
// ============================================================================

export interface NeuroSEOReport {
    analysis: Analysis;
    recommendations: Recommendation[];
    quotaUsage: UsageCheck;
    metadata: {
        timestamp: Date;
        processingTime: number;
        version: string;
    };
}

export interface Analysis {
    overallScore: number;
    technicalSeo: TechnicalSEOAnalysis;
    semanticAnalysis: SemanticAnalysis;
    aiVisibilityScore: number;
    trustSignals: TrustSignal[];
}

export interface UsageCheck {
    allowed: boolean;
    remainingQuota: number;
    remaining: number; // Backward compatibility
    limit: number;
    resetDate: Date;
    reason?: string;
}

// ============================================================================
// COMPETITOR ANALYSIS TYPES
// ============================================================================

export interface CompetitorAnalysisInput {
    keywords: string[];
    yourUrl: string;
    competitorUrls: string[];
}

export interface CompetitorAnalysisOutput {
    rankings: CompetitorRanking[];
    competitorInsights: CompetitorInsight[];
    contentGaps: ContentGap[];
    recommendations: string[];
    metadata: {
        timestamp: Date;
        keywordsAnalyzed: number;
        competitorsAnalyzed: number;
    };
}

export interface CompetitorRanking {
    keyword: string;
    [url: string]: number | string; // Dynamic URL rankings
}

export interface CompetitorInsight {
    url: string;
    domain: string;
    strengths: string[];
    weaknesses: string[];
    contentStrategy: string;
    ranking: number;
}

export interface ContentGap {
    keyword: string;
    opportunity: string;
    difficulty: 'low' | 'medium' | 'high';
    potential: number;
}

// ============================================================================
// CONTENT ANALYSIS TYPES
// ============================================================================

export interface ContentAnalysisInput {
    content: string;
    targetKeywords: string[];
    url?: string;
}

export interface ContentAnalysisResponse {
    overallScore: number;
    readability: ReadabilityAnalysis;
    seo: SEOAnalysis;
    sentiment: SentimentAnalysis;
    recommendations: string[];
}

export interface ReadabilityAnalysis {
    score: number;
    grade: string;
    suggestions: string[];
}

export interface SEOAnalysis {
    score: number;
    keywordDensity: number;
    suggestions: string[];
}

export interface SentimentAnalysis {
    score: number;
    tone: string;
    suggestions: string[];
}

// ============================================================================
// REWRITE ANALYSIS TYPES
// ============================================================================

export interface RewriteAnalysis {
    id: string;
    originalText: string;
    rewrittenText: string;
    summary: string;
    improvements: string[];
    confidence: number;
    seoImpact: {
        readability: number;
        keywordDensity: number;
        semanticRelevance: number;
    };
}

// ============================================================================
// CONTENT BRIEF TYPES
// ============================================================================

export interface ContentBriefInput {
    topic: string;
    keywords: string[];
    competitorUrls: string[];
    targetAudience: string;
}

export interface ContentBriefOutput {
    title: string;
    metaDescription: string;
    outline: string[];
    llmGeneratedOutline: ContentOutlineItem[];
    competitorInsights: CompetitorBriefInsight[];
    keywordStrategy: KeywordStrategy;
    recommendations: string[];
}

export interface ContentOutlineItem {
    heading: string;
    subheadings: string[];
    keyPoints: string[];
    wordCount: number;
}

export interface CompetitorBriefInsight {
    url: string;
    contentLength: number;
    keyTopics: string[];
    contentGaps: string[];
}

export interface KeywordStrategy {
    primary: string[];
    secondary: string[];
    longtail: string[];
    related: string[];
}

// ============================================================================
// SEO AUDIT TYPES
// ============================================================================

export interface AuditUrlInput {
    url: string;
    keywords?: string[];
}

export interface AuditUrlOutput {
    url: string;
    overallScore: number;
    items: AuditItem[];
    recommendations: string[];
    metadata: {
        timestamp: Date;
        processingTime: number;
    };
}

export interface AuditItem {
    id: string;
    title: string;
    description: string;
    status: 'passed' | 'warning' | 'failed';
    score: number;
    impact: 'low' | 'medium' | 'high';
    details: string;
}

// ============================================================================
// LINK ANALYSIS TYPES
// ============================================================================

export interface LinkAnalysisInput {
    url: string;
    includeInternal?: boolean;
    includeExternal?: boolean;
}

export interface LinkAnalysisOutput {
    url: string;
    backlinks: BacklinkData[];
    internalLinks: InternalLink[];
    linkMetrics: LinkMetrics;
    recommendations: string[];
}

export interface BacklinkData {
    sourceUrl: string;
    sourceDomain: string;
    anchorText: string;
    authority: number;
    status: 'active' | 'broken' | 'redirect';
    firstSeen: Date;
}

export interface InternalLink {
    sourceUrl: string;
    targetUrl: string;
    anchorText: string;
    context: string;
}

export interface LinkMetrics {
    totalBacklinks: number;
    uniqueDomains: number;
    averageAuthority: number;
    brokenLinks: number;
}

// ============================================================================
// SERP ANALYSIS TYPES
// ============================================================================

export interface SerpViewInput {
    keyword: string;
    location?: string;
    device?: 'desktop' | 'mobile';
}

export interface SerpViewOutput {
    keyword: string;
    results: SerpResult[];
    features: SerpFeature[];
    metadata: {
        totalResults: number;
        searchTime: number;
        location: string;
        device: string;
    };
}

export interface SerpResult {
    position: number;
    url: string;
    title: string;
    description: string;
    domain: string;
    isAd: boolean;
}

export interface SerpFeature {
    type: 'featured_snippet' | 'people_also_ask' | 'local_pack' | 'images' | 'videos';
    content: any;
    position: number;
}

// ============================================================================
// INSIGHTS & KEYWORD RESEARCH TYPES
// ============================================================================

export interface GenerateInsightsInput {
    domain: string;
    keywords: string[];
    timeframe?: string;
}

export interface GenerateInsightsOutput {
    insights: InsightItem[];
    trends: TrendData[];
    opportunities: OpportunityItem[];
    metadata: {
        generatedAt: Date;
        dataSource: string;
    };
}

export interface InsightItem {
    id: string;
    title: string;
    description: string;
    impact: 'low' | 'medium' | 'high';
    category: 'content' | 'technical' | 'authority' | 'user-experience';
    actionItems: string[];
}

export interface TrendData {
    keyword: string;
    volume: number;
    trend: 'increasing' | 'decreasing' | 'stable';
    seasonality: number;
}

export interface OpportunityItem {
    keyword: string;
    opportunity: string;
    difficulty: number;
    potential: number;
}

export interface KeywordSuggestionInput {
    seedKeywords: string[];
    location?: string;
    language?: string;
}

export interface KeywordSuggestionOutput {
    keywords: KeywordData[];
    relatedTerms: string[];
    questions: string[];
    metadata: {
        totalSuggestions: number;
        processingTime: number;
    };
}

export interface KeywordData {
    keyword: string;
    volume: number;
    difficulty: number;
    cpc: number;
    intent: 'informational' | 'navigational' | 'transactional' | 'commercial';
}

// ============================================================================
// TECHNICAL SEO TYPES
// ============================================================================

export interface TechnicalSEOAnalysis {
    pageSpeed: PageSpeedMetrics;
    mobileUsability: MobileUsabilityCheck;
    structuredData: StructuredDataAnalysis;
    indexability: IndexabilityCheck;
}

export interface PageSpeedMetrics {
    desktop: {
        score: number;
        fcp: number;
        lcp: number;
        cls: number;
    };
    mobile: {
        score: number;
        fcp: number;
        lcp: number;
        cls: number;
    };
}

export interface MobileUsabilityCheck {
    isMobileFriendly: boolean;
    issues: string[];
    recommendations: string[];
}

export interface StructuredDataAnalysis {
    hasStructuredData: boolean;
    types: string[];
    errors: string[];
    warnings: string[];
}

export interface IndexabilityCheck {
    isIndexable: boolean;
    robotsTxt: string;
    metaRobots: string;
    issues: string[];
}

// ============================================================================
// SEMANTIC ANALYSIS TYPES
// ============================================================================

export interface SemanticAnalysis {
    topicCoverage: TopicCoverage;
    entityRecognition: EntityRecognition;
    contextualRelevance: number;
    semanticKeywords: string[];
}

export interface TopicCoverage {
    mainTopics: string[];
    subtopics: string[];
    coverage: number;
    gaps: string[];
}

export interface EntityRecognition {
    persons: string[];
    organizations: string[];
    locations: string[];
    concepts: string[];
}

// ============================================================================
// TRUST & AUTHORITY TYPES
// ============================================================================

export interface TrustSignal {
    type: 'authorship' | 'citations' | 'reviews' | 'social_proof' | 'security';
    score: number;
    description: string;
    recommendations: string[];
}

export interface Recommendation {
    id: string;
    title: string;
    description: string;
    priority: 'low' | 'medium' | 'high' | 'critical';
    impact: 'low' | 'medium' | 'high';
    effort: 'low' | 'medium' | 'high';
    category: string;
    actionItems: string[];
}

// ============================================================================
// ACTIVITY TRACKING TYPES
// ============================================================================

export const ACTIVITY_TYPES = {
    AUDIT: 'audit',
    KEYWORD_RESEARCH: 'keyword-research',
    SERP_ANALYSIS: 'serp-analysis',
    COMPETITOR_ANALYSIS: 'competitor-analysis',
    CONTENT_ANALYSIS: 'content-analysis',
    CONTENT_BRIEF: 'content-brief',
    LINK_ANALYSIS: 'link-analysis',
    TOOL_USAGE: 'tool-usage', // Add missing TOOL_USAGE
} as const;

export type ActivityType = typeof ACTIVITY_TYPES[keyof typeof ACTIVITY_TYPES];

export interface ActivityLog {
    id: string;
    userId: string;
    type: ActivityType;
    timestamp: Date;
    details: Record<string, any>;
    resultsSummary?: string;
}

// ============================================================================
// UTILITY TYPES
// ============================================================================

export type SubscriptionTier = 'free' | 'starter' | 'agency' | 'enterprise' | 'admin';

export interface User {
    uid: string;
    email: string;
    displayName?: string;
    subscriptionTier: SubscriptionTier;
    quotaUsage?: Record<string, number>;
    createdAt: Date;
    lastActive: Date;
}

// ============================================================================
// FUNCTION TYPES (for missing function imports)
// ============================================================================

export type AnalyzeContentFunction = (input: ContentAnalysisInput) => Promise<ContentAnalysisResponse>;
export type GenerateContentBriefFunction = (input: ContentBriefInput) => Promise<ContentBriefOutput>;
export type GenerateInsightsFunction = (input: GenerateInsightsInput) => Promise<GenerateInsightsOutput>;
export type GetKeywordSuggestionsFunction = (input: KeywordSuggestionInput) => Promise<KeywordSuggestionOutput>;
export type AnalyzeLinksFunction = (input: LinkAnalysisInput) => Promise<LinkAnalysisOutput>;
export type AuditUrlFunction = (input: AuditUrlInput) => Promise<AuditUrlOutput>;
export type GetSerpDataFunction = (input: SerpViewInput) => Promise<SerpViewOutput>;

// ============================================================================
// EXPORT ALL TYPES
// ============================================================================

export default {
    ACTIVITY_TYPES,
    // All interfaces are exported individually above
};

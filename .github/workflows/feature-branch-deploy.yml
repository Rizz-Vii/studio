# 🚀 Feature Branch Deployment Workflow
# Deploys feature branches to Firebase preview channels for testing
# Based on successful patterns from performance-optimization testing
name: "🔥 Feature Branch Testing"

on:
  push:
    branches:
      - "feature/**"
  pull_request:
    branches:
      - master
    types: [opened, synchronize, reopened]
  workflow_dispatch:
    inputs:
      deploy_functions:
        description: "Deploy Firebase Functions"
        required: false
        default: false
        type: boolean
      skip_tests:
        description: "Skip test suite (faster deployment)"
        required: false
        default: false
        type: boolean

env:
  NODE_VERSION: "20"
  FIREBASE_PROJECT_ID: "rankpilot-h3jpc"
  FIREBASE_TOOLS_VERSION: "13.31.2"

jobs:
  # Job 1: Build and Test
  build_and_test:
    runs-on: ubuntu-latest
    name: 🔧 Build & Test
    outputs:
      branch_name: ${{ steps.branch.outputs.name }}
      channel_id: ${{ steps.channel.outputs.id }}
      should_deploy: ${{ steps.validation.outputs.deploy }}

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 🏷️ Extract Branch Info
        id: branch
        run: |
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          SAFE_BRANCH=$(echo "$BRANCH_NAME" | sed 's/[^a-zA-Z0-9-]/-/g' | tr '[:upper:]' '[:lower:]')
          echo "name=$BRANCH_NAME" >> $GITHUB_OUTPUT
          echo "safe=$SAFE_BRANCH" >> $GITHUB_OUTPUT
          echo "🌟 Branch: $BRANCH_NAME" >> $GITHUB_STEP_SUMMARY

      - name: 🎯 Generate Channel ID
        id: channel
        run: |
          if [[ "${{ steps.branch.outputs.name }}" == "feature/performance-optimization-mobile-enhancement" ]]; then
            CHANNEL_ID="performance-testing"
          else
            CHANNEL_ID="feature-$(echo '${{ steps.branch.outputs.safe }}' | cut -d'-' -f2- | head -c 20)"
          fi
          echo "id=$CHANNEL_ID" >> $GITHUB_OUTPUT
          echo "🚀 Channel: $CHANNEL_ID" >> $GITHUB_STEP_SUMMARY

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: 📦 Install Dependencies
        run: |
          echo "## 📦 Installing Dependencies" >> $GITHUB_STEP_SUMMARY
          npm ci --prefer-offline --no-audit
          echo "✅ Dependencies installed" >> $GITHUB_STEP_SUMMARY

      - name: 🔍 TypeScript Check (Feature Branches Only)
        if: startsWith(github.ref, 'refs/heads/feature/') && github.event.inputs.skip_tests != 'true'
        run: |
          echo "## 🔍 TypeScript Validation" >> $GITHUB_STEP_SUMMARY
          npx tsc --noEmit || {
            echo "❌ TypeScript errors found" >> $GITHUB_STEP_SUMMARY
            exit 1
          }
          echo "✅ TypeScript validation passed" >> $GITHUB_STEP_SUMMARY

      - name: 🧹 ESLint Check (Feature Branches Only)
        if: startsWith(github.ref, 'refs/heads/feature/') && github.event.inputs.skip_tests != 'true'
        run: |
          echo "## 🧹 ESLint Validation" >> $GITHUB_STEP_SUMMARY
          npm run lint || {
            echo "⚠️ ESLint warnings found (continuing)" >> $GITHUB_STEP_SUMMARY
          }
          echo "✅ ESLint check completed" >> $GITHUB_STEP_SUMMARY

      - name: 🎭 Playwright Tests (Critical Path Only)
        if: startsWith(github.ref, 'refs/heads/feature/') && github.event.inputs.skip_tests != 'true'
        run: |
          echo "## 🎭 Playwright Testing" >> $GITHUB_STEP_SUMMARY
          npx playwright install --with-deps chromium
          npm run test:critical || {
            echo "⚠️ Some tests failed (continuing deployment)" >> $GITHUB_STEP_SUMMARY
          }
          echo "✅ Playwright tests completed" >> $GITHUB_STEP_SUMMARY
        env:
          NODE_OPTIONS: "--max-old-space-size=3072"

      - name: 🏗️ Build Application
        run: |
          echo "## 🏗️ Building Application" >> $GITHUB_STEP_SUMMARY
          echo "Building for testing environment..."
          npm run build
          echo "✅ Build completed successfully" >> $GITHUB_STEP_SUMMARY
        env:
          NODE_OPTIONS: "--max-old-space-size=3072"

      - name: ✅ Validation Complete
        id: validation
        run: |
          echo "deploy=true" >> $GITHUB_OUTPUT
          echo "## ✅ Pre-deployment Validation Complete" >> $GITHUB_STEP_SUMMARY
          echo "Ready for deployment to preview channel" >> $GITHUB_STEP_SUMMARY

      - name: 💾 Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ github.sha }}
          path: |
            .next/
            !.next/cache/
          retention-days: 7

  # Job 2: Deploy to Firebase Preview
  deploy:
    runs-on: ubuntu-latest
    name: 🚀 Deploy to Preview
    needs: build_and_test
    if: needs.build_and_test.outputs.should_deploy == 'true'

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 💾 Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-${{ github.sha }}
          path: .next/

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: 📦 Install Dependencies
        run: npm ci --prefer-offline --no-audit

      - name: 🔥 Deploy to Firebase Channel
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_RANKPILOT_H3JPC }}
          projectId: ${{ env.FIREBASE_PROJECT_ID }}
          channelId: ${{ needs.build_and_test.outputs.channel_id }}
          expires: 30d
        env:
          FIREBASE_CLI_EXPERIMENTS: webframeworks
          # Build Environment Variables
          NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
          NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
          NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
          NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
          NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
          NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
          # AI Service APIs
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
          # Security & Validation
          NEXT_PUBLIC_RECAPTCHA_SITE_KEY: ${{ secrets.NEXT_PUBLIC_RECAPTCHA_SITE_KEY }}
          RECAPTCHA_SECRET_KEY: ${{ secrets.RECAPTCHA_SECRET_KEY }}
          # Payment Integration
          STRIPE_PUBLISHABLE_KEY: ${{ secrets.STRIPE_PUBLISHABLE_KEY }}
          STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}

      - name: 🩺 Health Check
        run: |
          echo "## 🩺 Post-Deployment Health Check" >> $GITHUB_STEP_SUMMARY
          sleep 15
          PREVIEW_URL="https://${{ env.FIREBASE_PROJECT_ID }}--${{ needs.build_and_test.outputs.channel_id }}-$(echo ${{ github.sha }} | cut -c1-8).web.app"
          echo "🌐 Preview URL: $PREVIEW_URL" >> $GITHUB_STEP_SUMMARY
          # Basic health check
          curl -I "$PREVIEW_URL" && echo "✅ Site is accessible" >> $GITHUB_STEP_SUMMARY || echo "⚠️ Site not immediately accessible (may need more time)" >> $GITHUB_STEP_SUMMARY

      - name: 💬 Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const channelId = '${{ needs.build_and_test.outputs.channel_id }}';
            const previewUrl = `https://${{ env.FIREBASE_PROJECT_ID }}--${channelId}-${{ github.sha }}.web.app`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `🚀 **Feature Branch Deployed!**

              **🌟 Branch**: \`${{ needs.build_and_test.outputs.branch_name }}\`
              **🎯 Channel**: \`${channelId}\`
              **🌐 Preview URL**: [${previewUrl}](${previewUrl})
              **⏱️ Expires**: 30 days

              ✅ Ready for testing!`
            });

  # Job 3: Performance Testing (Optional)
  performance:
    runs-on: ubuntu-latest
    name: 📊 Performance Metrics
    needs: [build_and_test, deploy]
    if: needs.build_and_test.outputs.branch_name == 'feature/performance-optimization-mobile-enhancement'

    steps:
      - name: 📊 Lighthouse Performance Audit
        run: |
          echo "## 📊 Performance Metrics" >> $GITHUB_STEP_SUMMARY
          echo "🎯 Running Lighthouse audit for performance branch..." >> $GITHUB_STEP_SUMMARY
          # Install Lighthouse
          npm install -g lighthouse
          # Run Lighthouse audit
          PREVIEW_URL="https://${{ env.FIREBASE_PROJECT_ID }}--${{ needs.build_and_test.outputs.channel_id }}-$(echo ${{ github.sha }} | cut -c1-8).web.app"
          lighthouse "$PREVIEW_URL" \
            --output=json \
            --output-path=./lighthouse-results.json \
            --chrome-flags="--headless --no-sandbox" \
            --quiet || echo "⚠️ Lighthouse audit completed with warnings"
          echo "✅ Performance audit completed" >> $GITHUB_STEP_SUMMARY

      - name: 💾 Upload Performance Results
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-results-${{ github.sha }}
          path: lighthouse-results.json
          retention-days: 30

name: Deploy Lean Branch Testing

on:
  push:
    branches:
      - feature/lean-branch-architecture
  workflow_dispatch:
    inputs:
      deploy_functions:
        description: "Deploy Firebase Functions as well"
        required: false
        default: false
        type: boolean

env:
  NODE_VERSION: "20"
  FIREBASE_PROJECT_ID: "rankpilot-h3jpc"
  FIREBASE_TOOLS_VERSION: "13.31.2"

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy to Lean Branch Testing Channel

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: Build application
        run: npm run build
        env:
          NODE_OPTIONS: "--max-old-space-size=8192"
          ESLINT_NO_DEV_ERRORS: "true"
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          NEXT_PUBLIC_RECAPTCHA_SITE_KEY: ${{ secrets.NEXT_PUBLIC_RECAPTCHA_SITE_KEY }}
          RECAPTCHA_SECRET_KEY: ${{ secrets.RECAPTCHA_SECRET_KEY }}
          NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
          NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
          NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
          NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
          NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
          NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}

      - name: Create functions environment file
        run: |
          cd functions
          echo "GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}" > .env
          echo "GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }}" >> .env
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> .env
          echo "RECAPTCHA_SECRET_KEY=${{ secrets.RECAPTCHA_SECRET_KEY }}" >> .env

      - name: Deploy to Firebase Hosting (Lean Branch Testing Channel)
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_RANKPILOT_H3JPC }}
          projectId: rankpilot-h3jpc
          channelId: lean-branch-testing
          expires: 14d
        env:
          FIREBASE_CLI_EXPERIMENTS: webframeworks

      - name: Deploy Functions (if requested)
        if: github.event.inputs.deploy_functions == 'true'
        run: |
          npm install -g firebase-tools@${{ env.FIREBASE_TOOLS_VERSION }}
          firebase functions:config:set \
            gemini.api_key="${{ secrets.GEMINI_API_KEY }}" \
            google.api_key="${{ secrets.GOOGLE_API_KEY }}" \
            openai.api_key="${{ secrets.OPENAI_API_KEY }}" \
            recaptcha.secret_key="${{ secrets.RECAPTCHA_SECRET_KEY }}" \
            --project ${{ env.FIREBASE_PROJECT_ID }}
          firebase deploy --only functions --project ${{ env.FIREBASE_PROJECT_ID }}
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_RANKPILOT_H3JPC }}

      - name: Deployment Summary
        run: |
          echo "## ðŸš€ Lean Branch Deployment Complete" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Branch:** feature/lean-branch-architecture" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "**Channel:** lean-branch-testing" >> $GITHUB_STEP_SUMMARY
          echo "**Expires:** 14 days" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ðŸ”— Preview URL Available" >> $GITHUB_STEP_SUMMARY
          echo "Your lean branch deployment is available at the Firebase preview channel." >> $GITHUB_STEP_SUMMARY

name: 🚀 Feature/Performance Branch CI/CD Pipeline

on:
  push:
    branches: 
      - feature/performance-optimization-mobile-enhancement
      - feature/performance-*
  pull_request:
    branches: 
      - master
      - preDeploy
    types: [opened, synchronize, reopened]

env:
  NODE_VERSION: '20.x'
  CACHE_KEY: 'rankpilot-performance-deps'
  NODE_OPTIONS: '--max-old-space-size=6144'

jobs:
  # ==============================================
  # PERFORMANCE FEATURE VALIDATION
  # ==============================================
  performance-feature-validation:
    name: 🎯 Performance Feature Validation
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout Feature Branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref || github.ref }}

      - name: 🟢 Setup Node.js with Performance Config
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install Dependencies (Performance Optimized)
        run: |
          npm ci --legacy-peer-deps --prefer-offline
          echo "✅ Dependencies installed with performance optimization"

      - name: 🔍 Performance-Specific Linting
        run: |
          npm run lint
          echo "✅ Performance code quality validated"

      - name: 🏗️ Build with Performance Monitoring
        run: |
          npm run build:production
          echo "✅ Performance-optimized build completed"
        env:
          ANALYZE: true

      - name: 📊 Bundle Analysis
        run: |
          npm run analyze
          echo "✅ Bundle size analysis completed"

  # ==============================================
  # CORE WEB VITALS TESTING
  # ==============================================
  core-web-vitals:
    name: 📈 Core Web Vitals Testing
    runs-on: ubuntu-latest
    needs: performance-feature-validation
    
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install Dependencies
        run: npm ci --legacy-peer-deps

      - name: 🏗️ Build for Performance Testing
        run: npm run build:production

      - name: 🚀 Start Performance Server
        run: |
          npm start &
          sleep 15
          echo "✅ Performance server started"

      - name: 🌐 Lighthouse Performance Audit
        uses: treosh/lighthouse-ci-action@v10
        with:
          configPath: '.lighthouserc.json'
          uploadArtifacts: true
          temporaryPublicStorage: true

      - name: 📱 Mobile Performance Testing
        run: |
          npx lighthouse http://localhost:3000 --chrome-flags="--headless" --emulated-form-factor=mobile --throttling-method=devtools --output=json --output-path=./mobile-performance.json
          echo "✅ Mobile performance testing completed"

      - name: 📊 Performance Metrics Analysis
        run: |
          node -e "
            const fs = require('fs');
            const report = JSON.parse(fs.readFileSync('./mobile-performance.json'));
            const metrics = report.lhr.audits;
            
            console.log('📊 Core Web Vitals Results:');
            console.log('LCP (Largest Contentful Paint):', metrics['largest-contentful-paint'].displayValue);
            console.log('FID (First Input Delay):', metrics['max-potential-fid'].displayValue);
            console.log('CLS (Cumulative Layout Shift):', metrics['cumulative-layout-shift'].displayValue);
            console.log('Performance Score:', report.lhr.categories.performance.score * 100);
            
            // Fail if performance is below threshold
            if (report.lhr.categories.performance.score < 0.9) {
              console.error('❌ Performance score below 90%');
              process.exit(1);
            }
            console.log('✅ Performance targets met');
          "

  # ==============================================
  # MOBILE-FIRST TESTING
  # ==============================================
  mobile-optimization-testing:
    name: 📱 Mobile Optimization Testing
    runs-on: ubuntu-latest
    needs: performance-feature-validation
    
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install Dependencies
        run: npm ci --legacy-peer-deps

      - name: 🏗️ Build Application
        run: npm run build

      - name: 📱 Mobile-Specific Tests
        run: |
          npm run test:mobile
          echo "✅ Mobile optimization tests completed"

      - name: 🎯 Touch Target Validation
        run: |
          npm run test:accessibility
          echo "✅ Touch target accessibility validated"

      - name: 📊 Mobile Performance Validation
        run: |
          npm run test:performance
          echo "✅ Mobile performance validated"

  # ==============================================
  # ENHANCED TESTING SUITE
  # ==============================================
  performance-enhanced-testing:
    name: 🧪 Performance Enhanced Testing
    runs-on: ubuntu-latest
    needs: core-web-vitals
    
    strategy:
      matrix:
        test-type: [critical, high-memory, warmed]
    
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js with High Memory
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install Dependencies
        run: npm ci --legacy-peer-deps

      - name: 🧪 Run Performance Test Suite
        run: |
          case "${{ matrix.test-type }}" in
            "critical")
              npm run test:critical
              ;;
            "high-memory")
              npm run test:production
              ;;
            "warmed")
              npm run test:production
              ;;
          esac
          echo "✅ ${{ matrix.test-type }} tests completed"
        env:
          NODE_OPTIONS: '--max-old-space-size=6144'

  # ==============================================
  # SECURITY & QUALITY GATES
  # ==============================================
  security-performance-audit:
    name: 🔒 Security & Performance Audit
    runs-on: ubuntu-latest
    needs: performance-feature-validation
    
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install Dependencies
        run: npm ci --legacy-peer-deps

      - name: 🔍 Security Audit
        run: |
          npm audit --audit-level=moderate
          echo "✅ Security audit completed"

      - name: 🛡️ Performance Security Check
        run: |
          npm run security-check
          echo "✅ Performance security validated"

      - name: 🔐 Environment Validation
        run: |
          npm run verify-env
          echo "✅ Environment configuration validated"

  # ==============================================
  # BRANCH MERGE READINESS
  # ==============================================
  merge-readiness-check:
    name: 🎯 Merge Readiness Validation
    runs-on: ubuntu-latest
    needs: [core-web-vitals, mobile-optimization-testing, performance-enhanced-testing, security-performance-audit]
    
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install Dependencies
        run: npm ci --legacy-peer-deps

      - name: 🏗️ Final Build Validation
        run: |
          npm run build:production
          echo "✅ Final build validation completed"

      - name: 📊 Performance Metrics Report
        run: |
          echo "📊 Performance Branch Validation Summary:"
          echo "✅ Core Web Vitals Testing: PASSED"
          echo "✅ Mobile Optimization: PASSED"  
          echo "✅ Enhanced Testing Suite: PASSED"
          echo "✅ Security & Performance Audit: PASSED"
          echo "🎯 Branch ready for merge to preDeploy"

      - name: 🚀 Pre-Deploy Branch Check
        if: github.event_name == 'pull_request' && github.base_ref == 'preDeploy'
        run: |
          echo "🎯 Validating for preDeploy branch merge..."
          npm run test:production
          echo "✅ preDeploy merge validation completed"

  # ==============================================
  # PREVIEW CHANNEL DEPLOYMENT
  # ==============================================
  preview-channel-deployment:
    name: 🔄 Deploy to Performance Testing Channel
    runs-on: ubuntu-latest
    needs: merge-readiness-check
    if: github.ref == 'refs/heads/feature/performance-optimization-mobile-enhancement' && github.event_name == 'push'
    
    steps:
      - name: 🚀 Deploy to Preview Channel
        uses: ./.github/workflows/preview-channel-deploy.yml
        with:
          channel-id: 'performance-testing'
          branch-ref: ${{ github.ref }}

      - name: 📊 Preview Channel Integration
        run: |
          echo "🎯 Performance Testing Channel Integration:"
          echo "🔗 Live URL: https://rankpilot-h3jpc--performance-testing-mw0cwov5.web.app/"
          echo "📊 Core Web Vitals validation in progress..."
          echo "📱 Mobile optimization testing active"
          echo "✅ Preview channel ready for performance validation"

  # ==============================================
  # AUTOMATIC MERGE TO PREDEPLOY (Updated)
  # ==============================================
  auto-merge-to-predeploy:
    name: 🔄 Auto-Merge to preDeploy
    runs-on: ubuntu-latest
    needs: [merge-readiness-check, preview-channel-deployment]
    if: github.ref == 'refs/heads/feature/performance-optimization-mobile-enhancement' && github.event_name == 'push'
    
    steps:
      - name: 📥 Checkout preDeploy
        uses: actions/checkout@v4
        with:
          ref: preDeploy
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: 🔄 Merge Performance Branch
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git merge origin/feature/performance-optimization-mobile-enhancement --no-ff -m "🚀 Auto-merge: Performance optimization features validated and ready for deployment"
          git push origin preDeploy
          echo "✅ Performance features merged to preDeploy branch"

      - name: 📝 Create Merge Summary
        run: |
          echo "🎉 Performance optimization features successfully merged!"
          echo "📊 All quality gates passed:"
          echo "  ✅ Core Web Vitals validation"
          echo "  ✅ Mobile optimization testing"
          echo "  ✅ Enhanced testing suite"
          echo "  ✅ Security and performance audit"
          echo "  ✅ Preview channel deployment: https://rankpilot-h3jpc--performance-testing-mw0cwov5.web.app/"
          echo "🚀 preDeploy branch updated and ready for production deployment"

  # ==============================================
  # NOTIFICATION & REPORTING
  # ==============================================
  notification:
    name: 📢 Performance Validation Report
    runs-on: ubuntu-latest
    needs: [merge-readiness-check]
    if: always()
    
    steps:
      - name: 📊 Generate Performance Report
        run: |
          echo "📈 Performance Branch CI/CD Report"
          echo "Branch: ${{ github.ref_name }}"
          echo "Commit: ${{ github.sha }}"
          echo "Validation Status: ${{ needs.merge-readiness-check.result }}"
          
          if [ "${{ needs.merge-readiness-check.result }}" == "success" ]; then
            echo "✅ All performance validations passed"
            echo "🚀 Branch ready for production deployment"
          else
            echo "❌ Performance validation failed"
            echo "🔧 Review failed jobs and address issues"
          fi

      - name: 📝 Performance Metrics Summary
        run: |
          echo "📊 Performance Optimization Summary:"
          echo "🎯 Core Web Vitals: Validated for mobile and desktop"
          echo "📱 Mobile Performance: Optimized for 48px touch targets"
          echo "🧪 Enhanced Testing: High-memory and warmed cache validation"
          echo "🔒 Security: Performance security audit completed"
          echo "✅ Ready for merge to preDeploy branch"

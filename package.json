{
  "name": "rankpilot-studio",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "cross-env NODE_OPTIONS='--max-old-space-size=3072' next dev --turbopack",
    "dev-no-turbopack": "cross-env NODE_OPTIONS='--max-old-space-size=3072' next dev",
    "dev-lean": "cross-env NODE_OPTIONS='--max-old-space-size=2048' next dev",
    "dev-lean-no-turbopack": "cross-env NODE_OPTIONS='--max-old-space-size=2048' next dev",
    "dev-with-node-flags": "cross-env NODE_OPTIONS='--max-old-space-size=2048 --inspect' next dev",
    "build": "cross-env NODE_OPTIONS='--max-old-space-size=3072' ESLINT_NO_DEV_ERRORS=true next build",
    "build:firebase": "cross-env FIREBASE_DEPLOY=true NODE_ENV=production NODE_OPTIONS='--max-old-space-size=3072' next build",
    "build:analyze": "cross-env ANALYZE=true NODE_OPTIONS='--max-old-space-size=3072' ESLINT_NO_DEV_ERRORS=true next build",
    "build:fast": "cross-env NODE_OPTIONS='--max-old-space-size=3072' ESLINT_NO_DEV_ERRORS=true next build",
    "build:emergency": "cross-env ESLINT_NO_DEV_ERRORS=true DISABLE_ESLINT=true node scripts/build-skip-typecheck.js",
    "build:production": "npm run clean && npm run optimize && npm run build",
    "disable-agents": "node scripts/quick-disable-agents.js",
    "enable-agents": "rm -rf src/lib/agents && mv src/lib/agents.DISABLED src/lib/agents && echo 'âœ… Agents re-enabled'",
    "fix:typescript-epipe": "node scripts/fix-typescript-epipe-v3.js",
    "fix:typescript-epipe:v2": "node scripts/fix-typescript-epipe-v2.js",
    "fix:typescript-epipe:v1": "node scripts/fix-typescript-epipe.js",
    "restart:typescript": "node scripts/quick-typescript-restart.js",
    "start": "cross-env NODE_OPTIONS='--max-old-space-size=2048' next start",
    "lint": "next lint",
    "lint:fix": "next lint --fix",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "typecheck": "tsc --noEmit --incremental",
    "type-check": "tsc --noEmit --incremental",
    "lint:check": "next lint",
    "analyze": "cross-env ANALYZE=true npm run build",
    "clean": "rimraf .next tsconfig.tsbuildinfo functions/lib testing/results testing/reports",
    "optimize": "ts-node scripts/optimize-project.ts",
    "security-check": "npm audit && npm run verify-env",
    "verify-env": "ts-node -P scripts/tsconfig.json scripts/verify-env.ts",
    "test:mobile": "cross-env NODE_OPTIONS='--max-old-space-size=2048' playwright test --config=playwright.config.role-based.ts --project=legacy-tests testing/specs/main/mobile-nav-consolidated.spec.ts",
    "test:accessibility": "cross-env NODE_OPTIONS='--max-old-space-size=2048' playwright test --config=playwright.config.role-based.ts --project=accessibility",
    "test:performance": "cross-env NODE_OPTIONS='--max-old-space-size=2048' playwright test --config=playwright.config.role-based.ts --project=legacy-tests testing/specs/main/performance.spec.ts",
    "test:critical": "cross-env NODE_OPTIONS='--max-old-space-size=2048' playwright test --grep critical",
    "test:preview": "cross-env NODE_OPTIONS='--max-old-space-size=2048' TEST_BASE_URL=https://rankpilot-h3jpc--workshop-testing-mw0cwov5.web.app playwright test",
    "precommit": "npm run lint:fix && npm run typecheck && npm run optimize",
    "test": "cross-env NODE_OPTIONS='--max-old-space-size=2048' playwright test --config=playwright.config.role-based.ts",
    "test:auth": "cross-env NODE_OPTIONS='--max-old-space-size=2048' playwright test --config=playwright.config.role-based.ts --project=legacy-tests testing/specs/main/auth-consolidated.spec.ts",
    "test:visual": "cross-env NODE_OPTIONS='--max-old-space-size=2048' playwright test --config=playwright.config.role-based.ts --project=visual-regression",
    "test:api": "cross-env NODE_OPTIONS='--max-old-space-size=2048' playwright test --config=playwright.config.role-based.ts --project=api-testing",
    "test:lean": "cross-env NODE_OPTIONS='--max-old-space-size=2048' playwright test --config=playwright.config.lean.ts",
    "test:lean-critical": "cross-env NODE_OPTIONS='--max-old-space-size=2048' playwright test --config=playwright.config.lean.ts --project=lean-critical",
    "test:lean-mobile": "cross-env NODE_OPTIONS='--max-old-space-size=2048' playwright test --config=playwright.config.lean.ts --project=lean-mobile",
    "test:lean-performance": "cross-env NODE_OPTIONS='--max-old-space-size=2048' playwright test --config=playwright.config.lean.ts --project=lean-performance",
    "test:performance-critical": "cross-env NODE_OPTIONS='--max-old-space-size=3072' playwright test --config=playwright.config.performance.ts --project=performance-critical",
    "test:performance-mobile": "cross-env NODE_OPTIONS='--max-old-space-size=3072' playwright test --config=playwright.config.performance.ts --project=performance-mobile",
    "test:performance-load": "cross-env NODE_OPTIONS='--max-old-space-size=3072' playwright test --config=playwright.config.performance.ts --project=performance-load",
    "test:performance-full": "cross-env NODE_OPTIONS='--max-old-space-size=4096' playwright test --config=playwright.config.performance.ts",
    "test:features": "cross-env NODE_OPTIONS='--max-old-space-size=2048' playwright test --config=playwright.config.role-based.ts --project=legacy-tests testing/specs/main/features/",
    "test:ai-heavy": "cross-env NODE_OPTIONS='--max-old-space-size=3072' playwright test --config=playwright.config.ai-heavy.ts --workers=1",
    "test:production": "cross-env NODE_OPTIONS='--max-old-space-size=2048' playwright test --config=playwright.config.production.ts",
    "test:production-validation": "cross-env NODE_OPTIONS='--max-old-space-size=2048' playwright test --config=playwright.config.production-validation.ts",
    "test:security": "cross-env NODE_OPTIONS='--max-old-space-size=2048' playwright test --config=playwright.config.security.ts --project=security-tests",
    "test:security-enhanced": "bash scripts/run-security-tests.sh",
    "security:init": "node -e \"require('./src/lib/security/security-initializer.ts').initializeSecuritySystems().catch(console.error)\"",
    "security:health": "node -e \"console.log(JSON.stringify(require('./src/lib/security/security-initializer.ts').getSystemHealthReport(), null, 2))\"",
    "test:load": "cross-env NODE_OPTIONS='--max-old-space-size=2048' playwright test --config=playwright.config.production-validation.ts --project=load-tests",
    "test:warming": "cross-env NODE_OPTIONS='--max-old-space-size=2048' playwright test --config=playwright.config.warming.ts",
    "test:warming-enhanced": "cross-env NODE_OPTIONS='--max-old-space-size=2048' playwright test --config=playwright.config.warming-enhanced.ts",
    "workshop:performance": "git checkout workshop/performance && git push origin workshop/performance",
    "workshop:deployment": "git checkout workshop/deployment-ready && git push origin workshop/deployment-ready",
    "workshop:create": "git checkout -b workshop/$npm_config_name && git push origin workshop/$npm_config_name",
    "staging:promote": "git checkout staging && git merge workshop/$npm_config_from && git push origin staging",
    "production:release": "gh pr create --base master --head staging --title 'Production Release: $(date +%Y-%m-%d)' --body 'Ready for production deployment'",
    "test:lean:url": "cross-env NODE_OPTIONS='--max-old-space-size=2048' TEST_URL=$(firebase hosting:channel:list --project rankpilot-h3jpc --json | grep -o '\"url\":\"[^\"]*' | head -1 | cut -d'\"' -f4) playwright test -c playwright.config.lean.ts",
    "pilotbuddy:update": "node scripts/pilotbuddy-aggregator.js",
    "pilotbuddy:watch": "nodemon --watch docs --watch scripts --watch src --ext md,ts,tsx,js --exec \"npm run pilotbuddy:update\"",
    "pilot:auto-lint": "node pilotScripts/automation/auto-markdown-lint-v1.js",
    "pilot:auto-lint:watch": "node pilotScripts/automation/auto-markdown-lint-v1.js --watch",
    "pilot:generate-solution": "node pilotScripts/automation/auto-script-generator-v1.js",
    "pilot:organize-files": "node pilotScripts/utilities/util-file-organizer-v1.js",
    "debug:systematic": "bash pilotScripts/debugging/systematic-debugging-checklist.sh",
    "debug:auto": "bash pilotScripts/debugging/systematic-debugging-checklist.sh -AutoValidate",
    "debug:validate": "bash pilotScripts/debugging/systematic-debugging-checklist.sh -DryRun",
    "debug:enforce": "node -e \"const { systematicDebugger } = require('./src/lib/debugging/systematic-debugger.ts'); systematicDebugger.enforceSystematicApproach();\"",
    "fix:vendor-chunks": "node scripts/fix-vendor-chunks.js",
    "rotate-credentials": "ts-node scripts/rotate-credentials.ts",
    "migrate-tiers": "ts-node -P scripts/tsconfig.json scripts/migrate-tier-consistency.ts",
    "update-tier-system": "ts-node -P scripts/tsconfig.json scripts/update-tier-system.ts",
    "fix-subscription-tiers": "ts-node -P scripts/tsconfig.json scripts/fix-subscription-tiers.ts",
    "firebase:build": "(cd functions && npm run build)",
    "firebase:serve": "(cd functions && npm run serve)",
    "firebase:serve:performance": "(cd functions && npm run serve:performance)",
    "firebase:deploy": "(cd functions && npm run deploy)",
    "firebase:deploy:performance": "(cd functions && npm run deploy:performance)",
    "firebase:logs": "(cd functions && npm run logs)",
    "firebase:logs:performance": "(cd functions && npm run logs:performance)",
    "optimize-windows": "powershell -ExecutionPolicy Bypass -File scripts/optimize-windows-filesystem.ps1",
    "optimize-windows:benchmark": "powershell -ExecutionPolicy Bypass -File scripts/optimize-windows-filesystem.ps1 -Benchmark",
    "optimize-windows:dry-run": "powershell -ExecutionPolicy Bypass -File scripts/optimize-windows-filesystem.ps1 -DryRun",
    "emfile:check": "powershell -ExecutionPolicy Bypass -File scripts/fix-emfile-error.ps1 -Mode check",
    "emfile:fix": "powershell -ExecutionPolicy Bypass -File scripts/fix-emfile-error.ps1 -Mode fix -AutoFix",
    "emfile:monitor": "powershell -ExecutionPolicy Bypass -File scripts/fix-emfile-error.ps1 -Mode monitor",
    "emfile:monitor:verbose": "powershell -ExecutionPolicy Bypass -File scripts/fix-emfile-error.ps1 -Mode monitor -Verbose",
    "emfile:monitor:autofix": "powershell -ExecutionPolicy Bypass -File scripts/fix-emfile-error.ps1 -Mode monitor -AutoFix",
    "emfile:preventive": "powershell -ExecutionPolicy Bypass -File scripts/fix-emfile-error.ps1 -Mode preventive",
    "db:create-auth": "npx ts-node scripts/create-auth-users.ts",
    "db:create-test-users": "node scripts/create-test-users.js",
    "db:populate": "npx ts-node scripts/populate-dummy-data.ts",
    "db:verify": "npx ts-node scripts/verify-dummy-data.ts",
    "db:test-all": "npx ts-node scripts/test-all-use-cases.ts",
    "db:get-users": "npx ts-node scripts/get-all-users.ts",
    "db:setup": "npm run db:populate && npm run db:verify && npm run db:test-all",
    "lint:md": "markdownlint docs/**/*.md",
    "lint:md:fix": "markdownlint --fix docs/**/*.md"
  },
  "dependencies": {
    "@ai-sdk/anthropic": "0.0.56",
    "@ai-sdk/google": "0.0.55",
    "@ai-sdk/openai": "^2.0.0",
    "@anthropic-ai/sdk": "^0.30.1",
    "@axe-core/playwright": "^4.10.2",
    "@google-cloud/error-reporting": "^3.0.5",
    "@google-cloud/tasks": "^6.2.0",
    "@google/generative-ai": "^0.21.0",
    "@hookform/resolvers": "^3.10.0",
    "@langchain/community": "^0.3.22",
    "@langchain/core": "^0.3.25",
    "@langchain/google-genai": "^0.1.2",
    "@langchain/openai": "^0.3.15",
    "@neondatabase/serverless": "^0.10.1",
    "@next/bundle-analyzer": "^15.1.5",
    "@opentelemetry/auto-instrumentations-node": "^0.62.0",
    "@opentelemetry/exporter-metrics-otlp-http": "^0.203.0",
    "@paypal/react-paypal-js": "^8.8.3",
    "@radix-ui/react-accordion": "^1.2.1",
    "@radix-ui/react-alert-dialog": "^1.1.2",
    "@radix-ui/react-avatar": "^1.1.1",
    "@radix-ui/react-checkbox": "^1.1.2",
    "@radix-ui/react-collapsible": "^1.1.1",
    "@radix-ui/react-dialog": "^1.1.2",
    "@radix-ui/react-dropdown-menu": "^2.1.2",
    "@radix-ui/react-hover-card": "^1.1.2",
    "@radix-ui/react-icons": "^1.3.2",
    "@radix-ui/react-label": "^2.1.0",
    "@radix-ui/react-menubar": "^1.1.15",
    "@radix-ui/react-navigation-menu": "^1.2.1",
    "@radix-ui/react-popover": "^1.1.2",
    "@radix-ui/react-progress": "^1.1.0",
    "@radix-ui/react-radio-group": "^1.2.1",
    "@radix-ui/react-scroll-area": "^1.2.0",
    "@radix-ui/react-select": "^2.1.2",
    "@radix-ui/react-separator": "^1.1.0",
    "@radix-ui/react-slider": "^1.2.1",
    "@radix-ui/react-slot": "^1.1.0",
    "@radix-ui/react-switch": "^1.1.1",
    "@radix-ui/react-tabs": "^1.1.1",
    "@radix-ui/react-toast": "^1.2.2",
    "@radix-ui/react-toggle": "^1.1.0",
    "@radix-ui/react-toggle-group": "^1.1.0",
    "@radix-ui/react-tooltip": "^1.1.3",
    "@sentry/nextjs": "^8.46.0",
    "@stripe/stripe-js": "^4.10.0",
    "@types/react": "^19.0.2",
    "@types/react-dom": "^19.0.2",
    "@vercel/analytics": "^1.3.2",
    "@vercel/speed-insights": "^1.1.0",
    "ai": "^4.0.37",
    "autoprefixer": "^10.4.20",
    "canvas-confetti": "^1.9.3",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "cmdk": "1.0.3",
    "cross-env": "^7.0.3",
    "d3": "^7.9.0",
    "date-fns": "^4.1.0",
    "eslint": "^9.17.0",
    "eslint-config-next": "^15.1.5",
    "firebase": "^11.0.2",
    "firebase-admin": "^12.7.0",
    "firebase-functions": "^6.1.1",
    "framer-motion": "^11.15.0",
    "google-auth-library": "^9.15.0",
    "input-otp": "^1.4.1",
    "jspdf": "^3.0.1",
    "langchain": "^0.3.5",
    "lucide-react": "^0.468.0",
    "next": "^15.4.5",
    "next-auth": "^4.24.11",
    "next-themes": "^0.4.4",
    "nodemailer": "^7.0.5",
    "openai": "^4.75.1",
    "playwright": "^1.49.1",
    "postcss": "^8.5.2",
    "react": "^19.0.0",
    "react-day-picker": "^9.8.1",
    "react-dom": "^19.0.0",
    "react-google-recaptcha": "^3.1.0",
    "react-hook-form": "^7.54.2",
    "react-hotkeys-hook": "^4.6.1",
    "react-icons": "^5.5.0",
    "recharts": "^2.15.4",
    "sonner": "^1.7.1",
    "stripe": "^17.3.1",
    "tailwind-merge": "^2.5.4",
    "tailwindcss": "^3.4.17",
    "tailwindcss-animate": "^1.0.7",
    "typescript": "^5.7.2",
    "vaul": "^1.1.1",
    "web-vitals": "^5.0.3",
    "zod": "^3.24.1",
    "zustand": "^5.0.2"
  },
  "optionalDependencies": {
    "xlsx": "^0.18.5"
  },
  "devDependencies": {
    "@genkit-ai/googleai": "^1.15.5",
    "@playwright/test": "^1.49.1",
    "@types/canvas-confetti": "^1.9.0",
    "@types/d3": "^7.4.3",
    "@types/jest": "^29.5.14",
    "@types/lru-cache": "^7.10.10",
    "@types/node": "^24.1.0",
    "@types/nodemailer": "^6.4.17",
    "@types/react-google-recaptcha": "^2.1.9",
    "cheerio": "^1.1.2",
    "dotenv": "^16.4.7",
    "genkit": "^1.15.5",
    "markdownlint": "^0.36.1",
    "markdownlint-cli": "^0.43.0",
    "nodemon": "^3.1.9",
    "prettier": "^3.4.2",
    "rimraf": "^6.0.1",
    "ts-node": "^10.9.2"
  }
}
